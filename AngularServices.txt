Abrimos el proyecto AngularBasicos
--------------------------------------------------------------------------------------------
ng g c promesas --skip-tests=true
--------------------------------------------------------------------------------------------
--promesas.component.ts

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-promesas',
  templateUrl: './promesas.component.html',
  styleUrls: ['./promesas.component.css']
})
export class PromesasComponent implements OnInit {
  url = './assets/people.json';

  constructor() {}

  ngOnInit() {
    this.getPeople();
    this.getPeopleAsyncAwait();
  }

  getPeople() {
    fetch(this.url)
      .then((resp) => resp.json())
      .then((data) => {
        console.log(data);
      })
      .catch((err) => console.error(err));
  }

  async getPeopleAsyncAwait() {
    try {
      const resp = await fetch(this.url);
      const data = await resp.json();
      console.log(data);
    } catch (error) {
      console.error(error);
    }
  }
}

--------------------------------------------------------------------------------------------
--app.component.html

<app-promesas></app-promesas>

--------------------------------------------------------------------------------------------
ng g c observables --skip-tests=true
--------------------------------------------------------------------------------------------
--observables.component.ts

import { HttpClient } from '@angular/common/http';
import { Component, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

@Component({
  selector: 'app-observables',
  templateUrl: './observables.component.html',
  styleUrls: ['./observables.component.css']
})
export class ObservablesComponent implements OnInit {
  url = './assets/people.json';

  constructor(private http: HttpClient) {}

  ngOnInit() {
    this.getPeople();
  }

  getPeople() {
    this.getPeopleObservable().subscribe(
      (data) => {
        console.log(data);
      },
      (err) => console.log(err),
      () => console.log('OK')
    );
  }

  getPeopleObservable(): Observable<any[]> {
    // return this.http.get<any[]>(this.url);
    return this.http.get<any[]>(this.url).pipe(
      map((x) => {
        return x.filter((x) => x.nombre.startsWith('A'));
      })
    );
  }
}

--------------------------------------------------------------------------------------------
--app.component.html

<app-observables></app-observables>

--------------------------------------------------------------------------------------------
Nuevo proyecto

ng new AngularServices

ng g c restCountries --skip-tests=true
--------------------------------------------------------------------------------------------
npm install bootstrap --save
--------------------------------------------------------------------------------------------
--angular.json

"styles": [
  "./node_modules/bootstrap/dist/css/bootstrap.min.css",
  "src/styles.css"
],

--------------------------------------------------------------------------------------------
--app.component.html

<div class="container">
  <h1>Acceso a web services con Angular</h1>
  <app-rest-countries></app-rest-countries>
  <hr>
  <footer>Curso Angular 2023</footer>
</div>

--------------------------------------------------------------------------------------------
ng generate service services/restCountries --skip-tests=true 
--------------------------------------------------------------------------------------------
--app.module.ts

import { HttpClientModule } from '@angular/common/http';
.....
  imports: [
    BrowserModule, HttpClientModule
  ],

--------------------------------------------------------------------------------------------
Creamos carpeta interfaces. Dentro, creamos el archivo pais.interface.ts
--------------------------------------------------------------------------------------------
--pais.interface.ts

// Generated by https://quicktype.io

export interface IPais {
  name:         Name;
  tld:          string[];
  cca2:         string;
  ccn3:         string;
  cca3:         string;
  cioc:         string;
  independent:  boolean;
  status:       string;
  unMember:     boolean;
  currencies:   Currencies;
  idd:          Idd;
  capital:      string[];
  altSpellings: string[];
  region:       string;
  subregion:    string;
  languages:    Languages;
  translations: { [key: string]: Translation };
  latlng:       number[];
  landlocked:   boolean;
  borders:      string[];
  area:         number;
  demonyms:     Demonyms;
  flag:         string;
  maps:         Maps;
  population:   number;
  gini:         Gini;
  fifa:         string;
  car:          Car;
  timezones:    string[];
  continents:   string[];
  flags:        Flags;
  coatOfArms:   CoatOfArms;
  startOfWeek:  string;
  capitalInfo:  CapitalInfo;
  postalCode:   PostalCode;
}

export interface CapitalInfo {
  latlng: number[];
}

export interface Car {
  signs: string[];
  side:  string;
}

export interface CoatOfArms {
  png: string;
  svg: string;
}

export interface Currencies {
  TND: Tnd;
}

export interface Tnd {
  name:   string;
  symbol: string;
}

export interface Demonyms {
  eng: Eng;
  fra: Eng;
}

export interface Eng {
  f: string;
  m: string;
}

export interface Flags {
  png: string;
  svg: string;
  alt: string;
}

export interface Gini {
  "2015": number;
}

export interface Idd {
  root:     string;
  suffixes: string[];
}

export interface Languages {
  ara: string;
}

export interface Maps {
  googleMaps:     string;
  openStreetMaps: string;
}

export interface Name {
  common:     string;
  official:   string;
  nativeName: NativeName;
}

export interface NativeName {
  ara: Translation;
}

export interface Translation {
  official: string;
  common:   string;
}

export interface PostalCode {
  format: string;
  regex:  string;
}


--------------------------------------------------------------------------------------------
--rest-countries.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { IPais } from '../interfaces/pais.interface';

@Injectable({
  providedIn: 'root'
})
export class RestCountriesService {
  constructor(private http: HttpClient) {}

  getCountries(): Observable<IPais[]> {
    return this.http.get<IPais[]>('https://restcountries.com/v3.1/all');
  }
}

--------------------------------------------------------------------------------------------
--rest-countries.component.ts

import { Component, OnInit } from '@angular/core';
import { IPais } from '../interfaces/pais.interface';
import { RestCountriesService } from '../services/rest-countries.service';

@Component({
  selector: 'app-rest-countries',
  templateUrl: './rest-countries.component.html',
  styleUrls: ['./rest-countries.component.css']
})
export class RestCountriesComponent implements OnInit {
  paises: IPais[] = [];

  constructor(private restCountriesService: RestCountriesService) {}

  ngOnInit() {
    this.getPaises();
  }

  getPaises() {
    this.restCountriesService.getCountries().subscribe({
      next: (data) => {
        console.log(data);
        this.paises = data;
      },
      error: (err) => console.log(err),
      complete: () => console.log('OK')
    });
  }
}

--------------------------------------------------------------------------------------------
--rest-countries.component.html

<div class="container">
    <select class="form-control">
    <option value="default">Seleccciona país</option>
    <option *ngFor="let pais of paises">
        {{ pais.name.common }}
    </option>
  </select>
</div>

--------------------------------------------------------------------------------------------
Angular Material

ng add @angular/material

--------------------------------------------------------------------------------------------
--app.module.ts

...

import { MatTableModule } from '@angular/material/table';
import { MatSelectModule } from '@angular/material/select';
import { MatPaginatorModule } from '@angular/material/paginator';

...

 imports: [
    BrowserModule,
    HttpClientModule,
    BrowserAnimationsModule,
    MatTableModule,
    MatSelectModule,
    MatPaginatorModule
  ],

--------------------------------------------------------------------------------------------
--rest-countries.component.html

<div class="container">
  <div class="row">
    <!-- <select class="form-control">
      <option value="default">Seleccciona país</option>
      <option *ngFor="let pais of paises">
        {{ pais.name.common }}
      </option>
    </select> -->
    <mat-label>Elige un país</mat-label>
    <mat-select>
      <mat-option *ngFor="let pais of paises" [value]="pais.name.common">{{pais.name.common}}</mat-option>
    </mat-select>
  </div>
  <div class="row mt-2">
    <table mat-table [dataSource]="dataSource" class="mat-elevation-z8" MatPaginator>

      <ng-container matColumnDef="bandera">
        <th mat-header-cell *matHeaderCellDef> País </th>
        <td mat-cell *matCellDef="let pais"><img [src]="pais.flags.png" alt="Bandera de {{pais.name.common}}"
            class="flag" /> </td>
      </ng-container>

      <ng-container matColumnDef="nombre">
        <th mat-header-cell *matHeaderCellDef> País </th>
        <td mat-cell *matCellDef="let pais"> {{pais.name.common}} </td>
      </ng-container>

      <ng-container matColumnDef="capital">
        <th mat-header-cell *matHeaderCellDef> Capital </th>
        <td mat-cell *matCellDef="let pais"> {{pais.capital && pais.capital[0]}} </td>
      </ng-container>

      <ng-container matColumnDef="habitantes">
        <th mat-header-cell *matHeaderCellDef> Habitantes </th>
        <td mat-cell *matCellDef="let pais"><span class="float-end">{{pais.population | number}}</span> </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
      <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>

    </table>
    <mat-paginator #paginator [pageSizeOptions]="[10, 15, 20]" showFirstLastButtons>
    </mat-paginator>
  </div>


</div>
 

--------------------------------------------------------------------------------------------
--rest-countries.component.ts

import { Component, OnInit, ViewChild } from '@angular/core';
import { MatPaginator } from '@angular/material/paginator';
import { MatTableDataSource } from '@angular/material/table';
import { IPais } from '../interfaces/pais.interface';
import { RestCountriesService } from '../services/rest-countries.service';

@Component({
  selector: 'app-rest-countries',
  templateUrl: './rest-countries.component.html',
  styleUrls: ['./rest-countries.component.css']
})
export class RestCountriesComponent implements OnInit {
  @ViewChild(MatPaginator) paginator!: MatPaginator;

  dataSource!: MatTableDataSource<IPais>;
  paises: IPais[] = [];

  displayedColumns: string[] = ['bandera', 'nombre', 'capital', 'habitantes'];

  constructor(private restCountriesService: RestCountriesService) {}

  ngOnInit() {
    this.getPaises();
  }

  getPaises() {
    this.restCountriesService.getCountries().subscribe({
      next: (data) => {
        console.log(data);
        this.paises = data;
        this.dataSource = new MatTableDataSource<IPais>(this.paises);
        this.dataSource.paginator = this.paginator;
      },
      error: (err) => console.log(err),
      complete: () => console.log('OK')
    });
  }
}

--------------------------------------------------------------------------------------------
--rest-countries.component.css

.flag {
  width: 50px;
  height: 25px;
  border: 0.25px solid;
}

--------------------------------------------------------------------------------------------

