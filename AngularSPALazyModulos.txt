ng new AngularServicesSPALazyModulos
--------------------------------------------------------------------------------------------
Angular Material y Bootstrap

ng add @angular/material

npm install bootstrap
--------------------------------------------------------------------------------------------
--angular.json

            "styles": [
              "./node_modules/bootstrap/dist/css/bootstrap.min.css",
              "src/styles.css"
            ],

--------------------------------------------------------------------------------------------
ng g m init

ng g c init/home --skip-tests=true
ng g c init/notFound --skip-tests=true
--------------------------------------------------------------------------------------------
--home.component.html

    <div class="row">
        <div class="col-md-8 jumbotron">
            <h1>Single page app (SPA) con Angular. Aplicación de acceso a web services REST</h1>
            <p>Incluye sistema de enrutamiento con carga en diferido de módulos. Utilizamos Angular Material para componentes visuales de alto nivel y Bootstrap para estilos generales
      </p>
        </div>

        <div class="col-md-4">
            <img src="./assets/angular.jpg" class="img-fluid" width="100%" />
        </div>
    </div>

--------------------------------------------------------------------------------------------
--not-found.component.html

  <div class="row">
    <div class="col">
      <img src="./assets/page_not_found.jpg" class="img-fluid" width="100%" />
    </div>
  </div>

--------------------------------------------------------------------------------------------
Creamos carpeta interfaces. Dentro, creamos el archivo pais.interface.ts
--------------------------------------------------------------------------------------------
--pais.interface.ts

// Generated by https://quicktype.io

export interface IPais {
  name:         Name;
  tld:          string[];
  cca2:         string;
  ccn3:         string;
  cca3:         string;
  cioc:         string;
  independent:  boolean;
  status:       string;
  unMember:     boolean;
  currencies:   Currencies;
  idd:          Idd;
  capital:      string[];
  altSpellings: string[];
  region:       string;
  subregion:    string;
  languages:    Languages;
  translations: { [key: string]: Translation };
  latlng:       number[];
  landlocked:   boolean;
  borders:      string[];
  area:         number;
  demonyms:     Demonyms;
  flag:         string;
  maps:         Maps;
  population:   number;
  gini:         Gini;
  fifa:         string;
  car:          Car;
  timezones:    string[];
  continents:   string[];
  flags:        Flags;
  coatOfArms:   CoatOfArms;
  startOfWeek:  string;
  capitalInfo:  CapitalInfo;
  postalCode:   PostalCode;
}

export interface CapitalInfo {
  latlng: number[];
}

export interface Car {
  signs: string[];
  side:  string;
}

export interface CoatOfArms {
  png: string;
  svg: string;
}

export interface Currencies {
  TND: Tnd;
}

export interface Tnd {
  name:   string;
  symbol: string;
}

export interface Demonyms {
  eng: Eng;
  fra: Eng;
}

export interface Eng {
  f: string;
  m: string;
}

export interface Flags {
  png: string;
  svg: string;
  alt: string;
}

export interface Gini {
  "2015": number;
}

export interface Idd {
  root:     string;
  suffixes: string[];
}

export interface Languages {
  ara: string;
}

export interface Maps {
  googleMaps:     string;
  openStreetMaps: string;
}

export interface Name {
  common:     string;
  official:   string;
  nativeName: NativeName;
}

export interface NativeName {
  ara: Translation;
}

export interface Translation {
  official: string;
  common:   string;
}

export interface PostalCode {
  format: string;
  regex:  string;
}

--------------------------------------------------------------------------------------------
ng g m rest
ng g c rest/restCountries --skip-tests=true
ng g c rest/restCountriesQuery --skip-tests=true
ng g c rest/rest --style=none --flat --skip-tests=true
ng g s rest/rest --skip-tests=true
--------------------------------------------------------------------------------------------
--rest.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { IPais } from '../interfaces/pais.interface';

@Injectable()
export class RestService {
  constructor(private http: HttpClient) {}

  getCountries(): Observable<IPais[]> {
    return this.http.get<any[]>('https://restcountries.com/v3.1/all');
  }

  getCountry(pais: string): Observable<IPais[]> {
    return this.http.get<any[]>('https://restcountries.com/v3.1/name/' + pais + '?fullText=true');
  }

}

--------------------------------------------------------------------------------------------
--rest.component.html

<h2>Módulo REST. Consultas a web services REST</h2>
<hr>
<router-outlet></router-outlet>

--------------------------------------------------------------------------------------------
Creamos en carpeta rest, rest.routing.module.ts
--------------------------------------------------------------------------------------------
--rest.routing.module.ts

import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
import { RestCountriesComponent } from './rest-countries/rest-countries.component';
import { RestCountriesQueryComponent } from './rest-countries-query/rest-countries-query.component';
import { RestComponent } from './rest.component';

const appRoutes: Routes = [
  {
    path: '',
    component: RestComponent,
    children: [
      { path: '', redirectTo: '/rest/restCountries', pathMatch: 'full' },
      { path: 'restCountries', component: RestCountriesComponent },
      {
        path: 'restCountriesQuery/:pais',
        component: RestCountriesQueryComponent
      }
    ]
  }
];

@NgModule({
  imports: [RouterModule.forChild(appRoutes)],
  exports: [RouterModule]
})
export class RestRoutingModule {}

export const routingComponents = [RestComponent, RestCountriesComponent, RestCountriesQueryComponent];

--------------------------------------------------------------------------------------------
--rest.module.ts

import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatTableModule } from '@angular/material/table';
import { MatPaginatorModule } from '@angular/material/paginator';
import { MatIconModule } from '@angular/material/icon';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';

import { RestRoutingModule, routingComponents } from './rest.routing.module';

import { RestService } from './rest.service';
import { SharedComponentsModule } from '../shared-components/shared-components.module';

@NgModule({
  imports: [
    RestRoutingModule,
    CommonModule,
    FormsModule,
    MatTableModule,
    MatPaginatorModule,
    SharedComponentsModule,
    MatIconModule,
    MatButtonModule,
    MatCardModule
  ],
  declarations: [routingComponents],
  providers: [RestService]
})
export class RestModule {}

--------------------------------------------------------------------------------------------
ng g m sharedComponents
ng g c shared-components/navbar --skip-tests=true
ng g c shared-components/footer --skip-tests=true
--------------------------------------------------------------------------------------------
--navbar.component.html

<mat-toolbar>
  <span>SPA Angular</span>
  <button mat-button [routerLink]="['/home']" routerLinkActive="bold">Inicio</button>
  <button mat-button [routerLink]="['/rest/restCountries']" routerLinkActive="bold">Países del mundo</button>
</mat-toolbar>

--------------------------------------------------------------------------------------------
--navbar.component.css

.bold {
  font-weight: bolder;
}

--------------------------------------------------------------------------------------------
--footer.component.html

<footer>Curso Angular 2023</footer>

--------------------------------------------------------------------------------------------
--shared-components.module.ts

import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatButtonModule } from '@angular/material/button';
import { NavbarComponent } from './navbar/navbar.component';
import { FooterComponent } from './footer/footer.component';
import { RouterModule } from '@angular/router';

@NgModule({
  declarations: [NavbarComponent, FooterComponent, WeatherComponent],
  imports: [CommonModule, RouterModule, MatToolbarModule, MatButtonModule],
  exports: [NavbarComponent, FooterComponent]
})
export class SharedComponentsModule {}

--------------------------------------------------
--app.module.ts

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { HttpClientModule } from '@angular/common/http';

import { InitModule } from './init/init.module';
import { SharedComponentsModule } from './shared-components/shared-components.module';

import { AppRoutingModule } from './app.routing.module';

import { AppComponent } from './app.component';

@NgModule({
  declarations: [AppComponent],
  imports: [
    BrowserModule,
    HttpClientModule,
    BrowserAnimationsModule,
    AppRoutingModule,
    SharedComponentsModule,
    InitModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule {}

--------------------------------------------------------------------------------------------
Creamos app.routing.module.ts al mismo nivel de app.module
--------------------------------------------------------------------------------------------
--app.routing.module.ts 

import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
import { HomeComponent } from './init/home/home.component';
import { NotFoundComponent } from './init/not-found/not-found.component';
  
const appRoutes: Routes = [
  { path: '', redirectTo: '/home', pathMatch: 'full' },
  { path: 'home', component: HomeComponent },
  { path: 'rest', loadChildren: () => import('./rest/rest.module').then(m => m.RestModule)},
 // { path: 'rest', loadChildren: './rest/rest.module#RestModule' },
  { path: '**', component: NotFoundComponent }
];

@NgModule({
  imports: [RouterModule.forRoot(appRoutes)],
  exports: [RouterModule]
})
export class AppRoutingModule {}

--------------------------------------------------------------------------------------------
--app.component.html

<div class="container mt-4">
  <app-navbar></app-navbar>
  <router-outlet></router-outlet>
  <hr>
  <app-footer></app-footer>
</div>

--------------------------------------------------------------------------------------------
--rest-countries.component.ts

import { Component, OnInit, ViewChild } from '@angular/core';
import { MatPaginator } from '@angular/material/paginator';
import { MatTableDataSource } from '@angular/material/table';
import { Router } from '@angular/router';
import { IPais } from 'src/app/interfaces/pais.interface';
import { RestService } from '../rest.service';

@Component({
  selector: 'app-rest-countries',
  templateUrl: './rest-countries.component.html',
  styleUrls: ['./rest-countries.component.css']
})
export class RestCountriesComponent implements OnInit {
  @ViewChild(MatPaginator) paginator!: MatPaginator;

  dataSource!: MatTableDataSource<IPais>;
  paises: IPais[] = [];

  displayedColumns: string[] = ['bandera', 'nombre', 'capital', 'habitantes', 'actions'];

  constructor(private restService: RestService, private router: Router) {}

  ngOnInit() {
    this.getPaises();
  }

  getPaises() {
    this.restService.getCountries().subscribe({
      next: (data) => {
        console.log(data);
        this.paises = data;
        this.dataSource = new MatTableDataSource<IPais>(this.paises);
        this.dataSource.paginator = this.paginator;
      },
      error: (err) => console.log(err),
      complete: () => console.log('OK')
    });
  }

  verInfoPais(pais: IPais) {
    this.router.navigateByUrl('/rest/restCountriesQuery/' + pais.name.common);
  }
}

----------------------------------------------------------------------------------------------
--rest-countries.component.html

<div class="container">
  <div class="row mt-2">
    <table mat-table [dataSource]="dataSource" class="mat-elevation-z8" MatPaginator>

      <ng-container matColumnDef="bandera">
        <th mat-header-cell *matHeaderCellDef> País </th>
        <td mat-cell *matCellDef="let pais"><img [src]="pais.flags.png" alt="Bandera de {{pais.name.common}}"
            class="flag" /> </td>
      </ng-container>

      <ng-container matColumnDef="nombre">
        <th mat-header-cell *matHeaderCellDef> País </th>
        <td mat-cell *matCellDef="let pais"> {{pais.name.common}} </td>
      </ng-container>

      <ng-container matColumnDef="capital">
        <th mat-header-cell *matHeaderCellDef> Capital </th>
        <td mat-cell *matCellDef="let pais"> {{pais.capital && pais.capital[0]}} </td>
      </ng-container>

      <ng-container matColumnDef="habitantes">
        <th mat-header-cell *matHeaderCellDef> Habitantes </th>
        <td mat-cell *matCellDef="let pais"><span class="float-end">{{pais.population | number}}</span> </td>
      </ng-container>

      <ng-container matColumnDef="actions">
        <th mat-header-cell *matHeaderCellDef></th>
        <td mat-cell *matCellDef="let pais;">
          <button mat-icon-button (click)="verInfoPais(pais)">
            <mat-icon>search</mat-icon>
          </button>
        </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
      <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>

    </table>
    <mat-paginator #paginator [pageSizeOptions]="[10, 15, 20]" showFirstLastButtons>
    </mat-paginator>
  </div>
</div>

----------------------------------------------------------------------------------------------
--rest-countries.component.css

.flag {
  width: 50px;
  height: 25px;
  border: 0.25px solid;
}

----------------------------------------------------------------------------------------------
--rest-countries-query.component.ts

import { Component, OnInit, OnDestroy } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Subscription } from 'rxjs';
import { IPais } from 'src/app/interfaces/pais.interface';
import { RestService } from '../rest.service';

@Component({
  selector: 'app-rest-countries-query',
  templateUrl: './rest-countries-query.component.html',
  styleUrls: ['./rest-countries-query.component.css']
})
export class RestCountriesQueryComponent implements OnInit, OnDestroy {
  parametros!: Subscription;
  paisConsulta: string = '';
  pais: IPais[] = [];

  constructor(private restService: RestService, private activatedRoute: ActivatedRoute) {}

  ngOnInit() {
    this.parametros = this.activatedRoute.params.subscribe((params) => (this.paisConsulta = params['pais']));
    this.getPais(this.paisConsulta);
  }

  ngOnDestroy() {
    this.parametros.unsubscribe();
  }

  getPais(pais: string) {
    this.restService.getCountry(pais).subscribe({
      next: (data) => {
        console.log(data);
        this.pais = data;
      },
      error: (err) => console.log(err)
    });
  }
}

----------------------------------------------------------------------------------------------
--rest-countries-query.component.html

<mat-card class="example-card">
  <mat-card-header>
    <mat-card-title>{{pais[0].name.common}}</mat-card-title>
    <mat-card-subtitle>{{pais[0].region}}</mat-card-subtitle>
  </mat-card-header>
  <img mat-card-image [src]="pais[0].flags.png" alt="Bandera de {{pais[0].name.common}}">
  <mat-card-content>
    <p>
      Capital: {{pais[0].capital}}
    </p>
  </mat-card-content>
</mat-card>

----------------------------------------------------------------------------------------------
--rest-countries-query.component.css

.example-card {
  max-width: 400px;
}

--------------------------------------------------------------------------------------------
En carpeta interfaces, creamos el archivo tiempo.interface.ts
--------------------------------------------------------------------------------------------
--tiempo.interface.ts

// Generated by https://quicktype.io

export interface ITiempo {
  coord: Coord;
  weather: Weather[];
  base: string;
  main: Main;
  visibility: number;
  wind: Wind;
  clouds: Clouds;
  dt: number;
  sys: Sys;
  timezone: number;
  id: number;
  name: string;
  cod: number;
}

export interface Clouds {
  all: number;
}

export interface Coord {
  lon: number;
  lat: number;
}

export interface Main {
  temp: number;
  feels_like: number;
  temp_min: number;
  temp_max: number;
  pressure: number;
  humidity: number;
}

export interface Sys {
  type: number;
  id: number;
  country: string;
  sunrise: number;
  sunset: number;
}

export interface Weather {
  id: number;
  main: string;
  description: string;
  icon: string;
}

export interface Wind {
  speed: number;
  deg: number;
}

----------------------------------------------------------------------------------------------
ng g c shared-components/weather --skip-tests=true
ng g s shared-components/shared-components --skip-tests=true
----------------------------------------------------------------------------------------------
--shared-components.module.ts
...

  exports: [NavbarComponent, FooterComponent,WeatherComponent]

----------------------------------------------------------------------------------------------
--shared-components.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ITiempo } from '../interfaces/tiempo.interface';

@Injectable({
  providedIn: 'root'
})
export class SharedComponentsService {
  constructor(private http: HttpClient) {}

  getInfoMeteo(latitud: number, longitud: number): Observable<ITiempo> {
    return this.http.get<ITiempo>(
      'https://api.openweathermap.org/data/2.5/weather/?lat=' +
        latitud +
        '&lon=' +
        longitud +
        '&units=metric&lang=es&&appid=879afb821f691358d29e6814408339e6'
    );
  }
}

----------------------------------------------------------------------------------------------
--weather.component.html

<img src="http://openweathermap.org/img/w/{{infoMeteo.weather[0].icon}}.png" alt="weather icon" *ngIf="infoMeteo">
<span class="badge bg-secondary" *ngIf="infoMeteo">{{infoMeteo.main.temp}}</span>

----------------------------------------------------------------------------------------------
--weather.component.ts

import { Component, OnInit } from '@angular/core';
import { ITiempo } from 'src/app/interfaces/tiempo.interface';
import { SharedComponentsService } from '../shared-components.service';

@Component({
  selector: 'app-weather',
  templateUrl: './weather.component.html',
  styleUrls: ['./weather.component.css']
})
export class WeatherComponent implements OnInit {
  infoMeteo!: ITiempo;

  constructor(private sharedComponentsService: SharedComponentsService) {}

  ngOnInit() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition((position) => {
        const latitud = position.coords.latitude;
        const longitud = position.coords.longitude;
        this.getInfoMeteo(latitud, longitud);
      });
    }
  }

  getInfoMeteo(latitud: number, longitud: number) {
    this.sharedComponentsService.getInfoMeteo(latitud, longitud).subscribe({
      next: (data) => {
        console.log(data);
        this.infoMeteo = data;
      },
      error: (err) => console.log(err),
      complete: () => console.log('OK')
    });
  }
}

---------------------------------------------------------------------------------------------
--weather.component.css

img {
  width: 50px;
  height: 35px;
}

---------------------------------------------------------------------------------------------
--footer.html

<footer>Curso Angular 2023 <app-weather></app-weather></footer>

-------------------------------------------------------------------------------------------------
ng build --configuration production